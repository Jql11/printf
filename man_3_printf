.TH _PRINTF(3)
.SH NAME
_printf \- print formatted output
.SH SYNOPSIS
.B int _printf(const char *format, ...);
.SH DESCRIPTION
.B _printf
This is a variadic function that produces output according to a format as described below.
.B _printf
writes output to stdout, the sandard output stream; it writes the output under the control of a format string that specifies how subsequent arguments are converted for output.
.SH Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any. The format string is composed of zero or more directives: ordinary  characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character %, and ends with a conversion specifier.
.SH Conversion specifiers
.TP
.BR di
The int arguments is convereted to signed decimal notation.
.TP
.BR c
If no l modifier is present, the int argument is convereted to an unsigned char, and the resulting characters is written.
.TP
.BR s
If no l modifier is present, the const char* argument is expected to be a pointer to an array of character type )pointer to a string). Characters from the array are written up to (bur not including) a terminating null nyte ('\0).
.TP
.BR %
A % is written. No argument is converted. The complete conversion specification is %%. 
.SH RETURN VALUE
Upon successful return,
.B _printf
return the number of characters printed (excluding the null byte used to end output to strings).
If an output error is encountered, a negative value is returned;